# disable "bell"
printf "\e[?1042l"
{{ if eq .chezmoi.os "darwin" }}
eval "$(/opt/homebrew/bin/brew shellenv)"
{{ end }}

# History
HISTFILE=~/.histfile
HISTSIZE=10000000000
SAVEHIST=10000000000

# Use emacs-like bindings
bindkey -e

# to find the code of a key, run `cat` then press the key
bindkey "^[[1;3C" forward-word
bindkey "^[[1;3D" backward-word
bindkey "^[[1~" beginning-of-line
bindkey "^[[4~" end-of-line
bindkey "^[[3~" delete-char

# Config autocomplete
autoload -Uz compinit
compinit

# Autocomplete options
setopt NO_BEEP AUTOLIST NO_BASH_AUTOLIST NO_AUTO_MENU NO_MENUCOMPLETE
setopt interactivecomments

export LC_ALL=en_GB.UTF-8
export LANG=en_GB.UTF-8

# Prompt
PS1=$'\n%(?..%F{red}[%?]%f)[%F{cyan}%n@%m%f %~] \n$ '


#########
# PATHS #
#########

# npm
export PATH="${HOME}/.npm-global/bin/:${PATH}"
export PATH="${HOME}/.local/bin/:${PATH}"

[ -d ~/.cargo/bin/ ] && { export PATH="${HOME}/.cargo/bin/:$PATH" }

[ -d /Library/Java/JavaVirtualMachines/jdk-19.0.2.jdk/Contents/Home ] && {
    export JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk-19.0.2.jdk/Contents/Home
}

test -d ~/.pyenv && {
    export PYENV_ROOT="$HOME/.pyenv"
    export PATH="$PYENV_ROOT/bin:$PATH"
    eval "$(pyenv init -)"
}

###################
# TOOLS & ALIASES #
###################

export EDITOR="nvim"

# misc
alias m="make"
alias pip-update-all="pip list --outdated | cut -d ' ' -f1 | tail -n +3  | xargs -n1 pip install -U"

# git
alias ga="git add"
alias gc="git commit"
alias gs="git status"
alias gd="git diff"
alias gdt="git difftool --tool=vimdiff --no-prompt"

command -v lazygit > /dev/null && {
    alias gg="lazygit"
}

# vim
alias vv="NVIM_APPNAME=lazyvim nvim"
alias lv="lvim"

# navigation
alias l='ls'
alias ll='ls -l'
alias la='ls -la'

alias m="make"

#########
# TOOLS #
#########

pv() {
  if type deactivate > /dev/null 2>&1 ; then
    echo "venv was active, deactivating..."
    deactivate
  elif [ -f .venv/bin/activate ]; then
    source .venv/bin/activate
  else
    echo "No virtualenv in '.venv' -- to create one, run:" >&2
    echo "python -m venv .venv" >&2
    return -1
  fi
}

codi() {
  local syntax="${1:-python}"
  shift
  nvim -c \
    "let g:startify_disable_at_vimenter = 1 |\
    highlight CodiVirtualText guifg=grey guibg=black |\
    let g:codi#virtual_text_pos = \"right_align\" |\
    set bt=nofile ls=0 noru nonu nornu |\
    hi ColorColumn ctermbg=NONE |\
    hi VertSplit ctermbg=NONE |\
    hi NonText ctermfg=0 |\
    Codi $syntax" "$@"
}
{{ if and (eq .chezmoi.os "linux") (eq .chezmoi.osRelease.id "ubuntu") }}
export APPIMAGE_EXTRACT_AND_RUN=1
BAT_COMMAND="batcat"
{{ else }}
BAT_COMMAND="bat"
{{ end }}

command -v fzf > /dev/null && {
    export FZF_DEFAULT_OPTS='
    --height 100%
    --border
    --bind=ctrl-/:toggle-preview'

    export FZF_CTRL_T_OPTS='
    --preview="$BAT_COMMAND--theme=zenburn --color=always --line-range :500 {}"
    --preview-window=right:60%'

    # Autocompletions
    {{ if and (eq .chezmoi.os "linux") (eq .chezmoi.osRelease.id "almalinux") }}
    source /usr/share/fzf/shell/key-bindings.zsh

    {{ else if and (eq .chezmoi.os "linux") (eq .chezmoi.osRelease.id "ubuntu") }}
    source /usr/share/doc/fzf/examples/key-bindings.zsh
    source /usr/share/doc/fzf/examples/completion.zsh

    {{ else if eq .chezmoi.os "darwin" }}
    source $(brew --prefix)/opt/fzf/shell/key-bindings.zsh

    {{ end }}

}

command -v rg > /dev/null || {
  alias rg='grep -rI --color=auto'
}

# zoxide (substitute for cd)
command -v zoxide > /dev/null && {
    eval "$(zoxide init zsh --cmd cd)"
}

## replace ls with eza
command -v eza > /dev/null && {
    EXA_COLORS="*=37:"                   # all extensions
    EXA_COLORS="${EXA_COLORS}:di=34"     # directories
    EXA_COLORS="${EXA_COLORS}:ln=37"     # symlinks
    EXA_COLORS="${EXA_COLORS}:da=38;5;8" # date
    EXA_COLORS="${EXA_COLORS}:sn=38;5;7" # file size number
    EXA_COLORS="${EXA_COLORS}:sb=38;5;7" # file size units
    EXA_COLORS="${EXA_COLORS}:uu=38;5;2" # user that's you
    EXA_COLORS="${EXA_COLORS}:un=38;5;1" # user that's someone else
    EXA_COLORS="${EXA_COLORS}:gu=38;5;2" # group that's you
    EXA_COLORS="${EXA_COLORS}:gn=38:5:1" # group that's someone else

    EXA_COLORS="${EXA_COLORS}:ur=38;5;8" # the user-read permission bit
    EXA_COLORS="${EXA_COLORS}:uw=38;5;8" # the user-write permission bit
    EXA_COLORS="${EXA_COLORS}:ux=38;5;8" # the user-execute permission bit for regular files
    EXA_COLORS="${EXA_COLORS}:ue=38;5;8" # the user-execute for other file kinds
    EXA_COLORS="${EXA_COLORS}:gr=38;5;8" # the group-read permission bit
    EXA_COLORS="${EXA_COLORS}:gw=38;5;8" # the group-write permission bit
    EXA_COLORS="${EXA_COLORS}:gx=38;5;8" # the group-execute permission bit
    EXA_COLORS="${EXA_COLORS}:tr=38;5;8" # the others-read permission bit
    EXA_COLORS="${EXA_COLORS}:tw=38;5;8" # the others-write permission bit
    EXA_COLORS="${EXA_COLORS}:tx=38;5;8" # the others-execute permission bit

    export EXA_COLORS

    eza_options='--group --header --changed --time-style long-iso --icons --group-directories-first'
    alias ls='eza $(printf $eza_options)'
    alias tree='eza --tree $(printf $eza_options)'
} || {
    alias ls='ls --color'
}

## less
alias c="$BAT_COMMAND --theme=zenburn"



#########
# CLOUD #
#########

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/Users/mhermose/google-cloud-sdk/path.zsh.inc' ]; then . '/Users/mhermose/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/Users/mhermose/google-cloud-sdk/completion.zsh.inc' ]; then . '/Users/mhermose/google-cloud-sdk/completion.zsh.inc'; fi

